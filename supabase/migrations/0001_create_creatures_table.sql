-- creatures 테이블 생성
CREATE TABLE public.creatures (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    name text NOT NULL,
    appearance_time text,
    location text,
    creature_type text,
    description text NOT NULL,
    story text,
    image_url text,
    like_count integer DEFAULT 0 NOT NULL,
    author_session_id uuid
);

-- 테이블에 대한 설명 추가
COMMENT ON TABLE public.creatures IS '사용자가 생성한 공포 존재(괴담)에 대한 정보를 저장하는 테이블';

-- 각 컬럼에 대한 설명 추가
COMMENT ON COLUMN public.creatures.id IS '고유 식별자';
COMMENT ON COLUMN public.creatures.created_at IS '레코드 생성 일시';
COMMENT ON COLUMN public.creatures.name IS '존재의 이름';
COMMENT ON COLUMN public.creatures.appearance_time IS '존재의 출몰 시간';
COMMENT ON COLUMN public.creatures.location IS '존재의 출몰 장소';
COMMENT ON COLUMN public.creatures.creature_type IS '존재의 유형 (예: 원혼, 도시괴담)';
COMMENT ON COLUMN public.creatures.description IS '사용자가 작성한 존재의 특징 및 설명';
COMMENT ON COLUMN public.creatures.story IS 'AI가 생성한 공포 소설 본문';
COMMENT ON COLUMN public.creatures.image_url IS 'AI가 생성한 대표 이미지의 URL';
COMMENT ON COLUMN public.creatures.like_count IS '좋아요 수';
COMMENT ON COLUMN public.creatures.author_session_id IS '작성자의 익명 세션 ID (수정/삭제 권한 확인용)';

-- Row Level Security (RLS) 활성화
-- 이 테이블의 데이터는 정책(Policy)을 통해서만 접근할 수 있게 됩니다.
ALTER TABLE public.creatures ENABLE ROW LEVEL SECURITY;

-- 공개(public) 읽기 접근 정책 생성
-- 모든 사용자가 'creatures' 테이블의 모든 데이터를 읽을 수 있도록 허용하는 정책입니다.
CREATE POLICY "Allow public read access" ON public.creatures
    FOR SELECT
    USING (true);

-- 익명 사용자 삽입 접근 정책 생성
-- 모든 사용자가 새로운 레코드를 테이블에 삽입할 수 있도록 허용하는 정책입니다.
CREATE POLICY "Allow anonymous insert access" ON public.creatures
    FOR INSERT
    WITH CHECK (true);

-- 작성자 본인만 수정/삭제할 수 있는 정책
-- auth.uid()가 author_session_id와 일치하는 사용자만 레코드를 수정/삭제할 수 있습니다.
-- Supabase의 익명 인증(signInAnonymously)을 사용하면 auth.uid()를 통해 세션 UUID를 얻을 수 있습니다.
CREATE POLICY "Allow update for authors" ON public.creatures
    FOR UPDATE USING (auth.uid() = author_session_id);

CREATE POLICY "Allow delete for authors" ON public.creatures
    FOR DELETE USING (auth.uid() = author_session_id);
